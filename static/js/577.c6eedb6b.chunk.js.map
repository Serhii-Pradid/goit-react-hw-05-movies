{"version":3,"file":"static/js/577.c6eedb6b.chunk.js","mappings":"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","sources":["components/Api.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["\nimport axios from 'axios';\nimport noPhoto from '../Images/nophoto.jpg';\nimport noPoster from '../Images/noposter.jpg';\n\nconst API_KEY = '2913f54037fb6fa761373ffd7bea2e58';\nconst URL = 'https://api.themoviedb.org/3/';\nconst BASE_URL ='https://image.tmdb.org/t/p/w500';\n\n\nexport const fetchTrandingMovies = async() => {\n\n    const response = await axios.get(\n        `${URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    \n    const movies = response.data.results.map(({ id, title }) => {\n        return {\n          id,\n          title,\n          };\n      });\n    \n      return { movies};\n    };\n\n\nexport const fetchDetailsMovies = async(movieId) => {\n\n      const response = await axios.get(\n            `${URL}movie/${movieId}?api_key=${API_KEY}`\n      );\n      \n      const {id, title, poster_path: poster, overview, vote_average, genres, release_date\n      } = response.data;\n\n          return {\n            id,\n            title,\n            poster: poster ? BASE_URL + poster : noPoster,\n            overview,\n            vote: vote_average.toFixed(1),\n            genres: genres.map(genre => genre.name).join(', '),\n            year: release_date.slice(0, 4),\n            };\n        };\n\n\n\nexport const fetchCredits = async(movieId) => {\n\n    const response = await axios.get(\n          `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n          );\n\n    const cast = response.data.cast.map(({id, name, profile_path: photo, character}) => {\n            \n        return {\n          id,\n          name,\n          photo: photo ? BASE_URL + photo : noPhoto ,\n          character,\n                };\n                });\n         \n          return{cast}\n              }\n\nexport const fetchRewies = async(movieId) => {\n\n          const response = await axios.get(\n                `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n                );\n      \n          const rewiesData = response.data.results.map(({id, author, content}) => {\n                  \n              return {\n                id,\n                author,\n                content,\n                  };\n                });\n              \n              return{rewiesData}\n                    }\n\nexport const fetchByQuery = async(query) => {\n\n          const response = await axios.get(\n                `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n                  );\n          const queryData = response.data.results.map(({id, title}) => {\n                              \n                return {\n                   id,\n                   title,\n                   };\n                   });\n                           \n                   console.log(queryData)\n                   return{queryData}\n                   }\n\n            ","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h3`\ndisplay: block;\nfont-size: 20px;\nfont-weight: 000px;\nmargin-left: 40px;\nmargin: 30px, 0;\n  text-decoration: none;\n  color: #515133;\n}`;\n\nexport const MovieLink = styled(NavLink)`\n  font-weight: 600;\n  font-size: 15px;\n  margin-right: 30px;\n  text-decoration: none;\n  &:hover\n   {\n    color: #515133;\n    font-weight: 800;\n    transform: scale(1.4);\n  }\n`;","import { useEffect, useState } from \"react\";\nimport { fetchTrandingMovies } from \"components/Api\";\nimport { useLocation} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport { MovieLink, Title } from './Home.styled';\n    \nconst Home = () => {\n    const [movies, setMovies] = useState([])\n    const location = useLocation();\n\n    useEffect(() => {\n       \n        async function getMovies() {\n\n        try { \n            const trandingMovies = await fetchTrandingMovies();\n            setMovies(trandingMovies.movies)\n\n        } catch(error) {\n           console.log(error)\n        }};\n\n        getMovies();\n        \n    }, []);\n\n    return (\n        <div>\n        <Title>Tranding today</Title>\n\n        {movies.length > 0 && (\n\n          <ul> \n\n             {movies.map(({id, title}) => (\n\n            <li key={id}>\n                <MovieLink to={`/movies/${id}`} state={{from:location}}> â†’ {title} </MovieLink>      \n            </li>\n                ))}\n          </ul> \n          )}\n         </div>\n    )\n};\n\nexport default Home;\n\nHome.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string,\n};\n\n"],"names":["API_KEY","URL","BASE_URL","fetchTrandingMovies","axios","response","movies","data","results","map","id","title","fetchDetailsMovies","movieId","poster","poster_path","overview","vote_average","genres","release_date","noPoster","vote","toFixed","genre","name","join","year","slice","fetchCredits","cast","photo","profile_path","character","noPhoto","fetchRewies","rewiesData","author","content","fetchByQuery","query","queryData","console","log","Title","styled","MovieLink","NavLink","useState","setMovies","location","useLocation","useEffect","trandingMovies","getMovies","length","to","state","from"],"sourceRoot":""}