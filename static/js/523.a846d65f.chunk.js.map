{"version":3,"file":"static/js/523.a846d65f.chunk.js","mappings":"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","sources":["components/Api.jsx","components/Rewies/Rewies.styled.js","components/Rewies/Rewies.jsx"],"sourcesContent":["\nimport axios from 'axios';\nimport noPhoto from '../Images/nophoto.jpg';\nimport noPoster from '../Images/noposter.jpg';\n\nconst API_KEY = '2913f54037fb6fa761373ffd7bea2e58';\nconst URL = 'https://api.themoviedb.org/3/';\nconst BASE_URL ='https://image.tmdb.org/t/p/w500';\n\n\nexport const fetchTrandingMovies = async() => {\n\n    const response = await axios.get(\n        `${URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    //console.log(response)\n\n    //return response.data;\n    const movies = response.data.results.map(({ id, title }) => {\n        return {\n          id,\n          title,\n          };\n      });\n    \n      return { movies};\n    };\n\n\nexport const fetchDetailsMovies = async(movieId) => {\n\n      const response = await axios.get(\n            `${URL}movie/${movieId}?api_key=${API_KEY}`\n      );\n      \n      const {id, title, poster_path: poster, overview, vote_average, genres, release_date\n      } = response.data;\n\n          return {\n            id,\n            title,\n            poster: poster ? BASE_URL + poster : noPoster,\n            overview,\n            vote: vote_average.toFixed(1),\n            genres: genres.map(genre => genre.name).join(', '),\n            year: release_date.slice(0, 4),\n            };\n        };\n\n\n\nexport const fetchCredits = async(movieId) => {\n\n    const response = await axios.get(\n          `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n          );\n\n    const cast = response.data.cast.map(({id, name, profile_path: photo, character}) => {\n            \n        return {\n          id,\n          name,\n          photo: photo ? BASE_URL + photo : noPhoto ,\n          character,\n                };\n                });\n         \n        //console.log(cast)\n        return{cast}\n              }\n\nexport const fetchRewies = async(movieId) => {\n\n          const response = await axios.get(\n                `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n                );\n      \n          const rewiesData = response.data.results.map(({id, author, content}) => {\n                  \n              return {\n                id,\n                author,\n                content,\n                  };\n                });\n               \n              //console.log(rewiesData)\n              return{rewiesData}\n                    }\n\nexport const fetchByQuery = async(query) => {\n\n          const response = await axios.get(\n                `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n                  );\n          const queryData = response.data.results.map(({id, title}) => {\n                              \n                return {\n                   id,\n                   title,\n                   };\n                   });\n                           \n                   console.log(queryData)\n                   return{queryData}\n                   }\n\n/*export const fetchByQuery = async(query) => {\n\n      const response = await axios.get(\n            `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n                  );\n                  console.log(response)                                                  \n            return response.data  \n      }*/\n                         \n            ","import styled from 'styled-components';\n\nexport const RewiesList = styled.ul`\nbackground-color: #6D6D54;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\nmargin-right: 0;\nmargin-left: 0;\npadding: 40px;\n`;\n\nexport const RewiesName = styled.h1`\nfont-weight: 600;\nfont-size: 20px;\ncolor: #fff;\n`;\n\nexport const RewiesContent = styled.p`\ndisplay: flex;\nmargin-top: 10px;\nfont-weight: 600;\nfont-size: 15px;\n`;\n\nexport const NoRewies = styled.h3`\nmargin-left: 40px;\ncolor: red;\n`;\n\n","import { useParams } from \"react-router-dom\";\nimport { fetchRewies } from \"../Api\";\nimport { useState, useEffect } from \"react\";\nimport { NoRewies, RewiesContent,RewiesList, RewiesName } from \"./Rewies.styled\";\n\nimport PropTypes from 'prop-types';\n\nconst Rewies = () => {\n    const {movieId} = useParams();\n    const [rewies, setRewies] = useState([]);\n\n    useEffect(() => {\n        \n        async function getRewiesDetails () {\n\n            try {\n                const detailsRewies = await fetchRewies(movieId);\n                //console.log(detailsRewies);\n                setRewies(detailsRewies.rewiesData)\n                \n            } catch (error) {\n                console.log(error)\n            }};\n\n            getRewiesDetails()\n        }, [movieId])\n        \n    return (\n    <> \n    {rewies.length > 0 ? (\n    <>\n        {rewies.map(({id, author, content }) => (\n       <RewiesList key={id}>\n       <RewiesName> Author:  {author} </RewiesName>\n       <RewiesContent>{content}</RewiesContent>\n       </RewiesList>\n        ))}\n    </>   \n    \n    ) : ( <NoRewies> We don't have any rewiews for this movie </NoRewies> )\n    }  \n    </>\n    )\n};\n\nexport default Rewies;\n\nRewies.propTypes = {\n    id: PropTypes.number,\n    author: PropTypes.string,\n    content: PropTypes.string,\n    };"],"names":["API_KEY","URL","BASE_URL","fetchTrandingMovies","axios","response","movies","data","results","map","id","title","fetchDetailsMovies","movieId","poster","poster_path","overview","vote_average","genres","release_date","noPoster","vote","toFixed","genre","name","join","year","slice","fetchCredits","cast","photo","profile_path","character","noPhoto","fetchRewies","rewiesData","author","content","fetchByQuery","query","queryData","console","log","RewiesList","styled","RewiesName","RewiesContent","NoRewies","useParams","useState","rewies","setRewies","useEffect","detailsRewies","getRewiesDetails","length"],"sourceRoot":""}